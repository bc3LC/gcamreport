name: test_coverage

on:
  push:
    branches:
      - gcam-v7.0
      - dev

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      GITHUB_PAT: ${{secrets.GH_GCAMREPORT_TOKEN}}

    steps:
      - uses: actions/checkout@v2
      - uses: r-lib/actions/setup-r@v2-branch
        with:
          r-version: '4.1.0'
      - uses: r-lib/actions/setup-pandoc@v2-branch
      - uses: r-lib/actions/setup-tinytex@v2-branch
      - uses: actions/download-artifact@v2

      - name: Cache R packages 
        uses: actions/cache@v1 
        with: 
          path: ${{ env.R_LIBS_USER }} 
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }} 
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1- 
      
      - name: Ubuntu config
        run: |
          sudo apt-add-repository ppa:ubuntugis/ubuntugis-unstable
          sudo apt-get update
          sudo apt-get install -y libcurl4-openssl-dev libharfbuzz-dev libfribidi-dev libssl-dev libxml2-dev libudunits2-dev libgdal-dev libgeos-dev libproj-dev libmagick++-dev libavfilter-dev

      - name: Install dependencies
        run: |
          install.packages(c("remotes","rcmdcheck","covr"), repos = "https://cloud.r-project.org")
          remotes::install_github("JGCRI/rpackageutils")
          remotes::install_deps(dependencies = TRUE)
        shell: Rscript {0}
        
      # - name: Test coverage
      #   run: |
      #     cov <- covr::package_coverage()
      #     covr:::report(cov, file = "coverage.xml")
      #   shell: Rscript {0}

      - uses: codecov/codecov-action@v3
        with:
          # token: ${{secrets.CODECOV_TOKEN}}
          files: ./coverage.xml
          verbose: true